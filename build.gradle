buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'pmd'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'

ext {
	serviceName = project.properties['name']
}


jar {
	baseName = project.properties['name']
	version = project.properties['version']
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-actuator-docs')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa',
			'mysql:mysql-connector-java:8.0.11',
			'org.springframework.boot:spring-boot-devtools',
			'org.projectlombok:lombok:1.16.20')
	compile('com.h2database:h2:1.4.191')
	compile('org.springframework:spring-jdbc:4.2.5.RELEASE')
	compile('commons-lang:commons-lang:2.6')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}

pmd {
	ignoreFailures = true
	sourceSets = [sourceSets.main]
	reportsDir = file("$project.buildDir/reports/pmd")
	ruleSetFiles = files("config/pmd/pmd.xml")
	ruleSets = []
  }
  
  check << {
	File outDir = new File('build/reports/pmd/')
	outDir.mkdirs()
	ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
	  classpath: configurations.pmd.asPath)
	ant.cpd(minimumTokenCount: '100', format: 'xml',
	  outputFile: new File(outDir , 'cpd.xml')) {
	  fileset(dir: "src/main/java") {
		include(name: '**/*.java')
	  }
	  }
  }
  
  jacocoTestReport {
	  group = "Reporting"
	  reports {
		  xml.enabled false
		  csv.enabled false
		  html.destination "${buildDir}/reports/coverage"
	  }
  
  }
  
  findbugs {
	ignoreFailures = true
	sourceSets = [sourceSets.main]
	reportsDir = file("$project.buildDir/reports/findbug")
	  effort = "max"
  }
  
  tasks.withType(FindBugs) {
	  reports {
		  xml.enabled false
		  html.enabled true
		  
	  }
  }
  
  checkstyle {
  
  
	  configFile = file('./config/checkstyle/checkstyle.xml')
	  showViolations = true
	  ignoreFailures = true
	  reportsDir = file("$project.buildDir/reports/checkstyle")
  }
  
  
  tasks.withType(Checkstyle) {
	  reports {
		  xml.enabled true
		  html.enabled true
		  
	  }
  }


//task wrapper(type: Wrapper) {
//	gradleVersion = '2.13'
//}
